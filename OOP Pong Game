#File 1: paddles.py 
from turtle import Turtle
POSITION_L = (-350, 0)
POSITION_R = (350, 0)


class Paddle(Turtle):

    def __init__(self, position):
        super().__init__()
        self.new_y = ''
        self.create_paddle(position)

    def create_paddle(self, position):
        self.shape("square")
        self.shapesize(stretch_wid=5, stretch_len=1)
        self.penup()
        self.color("white")
        self.goto(position)

    def move_down(self):
        self.new_y = self.ycor() - 20
        self.sety(self.new_y)

    def move_up(self):
        self.new_y = self.ycor() + 20
        self.sety(self.new_y)

#File 2: ball.py
from turtle import Turtle


class Ball(Turtle):
    def __init__(self):
        super().__init__()
        self.create_ball()
        self.x_move = 10
        self.y_move = 10
        self.move_speed = 0.08

    def create_ball(self):
        self.shape("circle")
        self.penup()
        self.color("blue")

    def move(self):
        new_x = self.xcor() + self.x_move
        new_y = self.ycor() + self.y_move
        self.goto(new_x, new_y)

    def wall_bounce(self):
        self.y_move *= -1
        self.move_speed *= 0.9

    def paddle_bounce(self):
        self.x_move *= -1
        self.move_speed *= 0.9

    def ball_restart(self):
        self.goto(0, 0)
        self.wall_bounce()
        self.paddle_bounce()
        self.move_speed = 0.09

#File 3: scoreboard.py
from turtle import Turtle
FONT = ("courier", 80, "normal")


class Scoreboard(Turtle):

    def __init__(self, position):
        super().__init__()
        self.penup()
        self.hideturtle()
        self.color("white")
        self.score = 0
        self.goto(position)
        self.write(arg=f"{self.score}", align="center", font=FONT)

    def add_score(self):
        self.clear()
        self.score += 1
        self.write(arg=f"{self.score}", align="center", font=FONT)
        
 File 4: main.py
 from turtle import Screen
from paddles import Paddle
from ball import Ball
import time
from scoreboard import Scoreboard

# Set up screen
screen = Screen()
screen.setup(width=800, height=600)
screen.bgcolor("black")
screen.title("Pong")
screen.tracer(0)

game_on = True

# Create Paddles
PADDLE_POSITION_L = (-350, 0)
PADDLE_POSITION_R = (350, 0)
paddle_l = Paddle(PADDLE_POSITION_L)
paddle_r = Paddle(PADDLE_POSITION_R)
# Create ball
ball = Ball()
# Create scoreboard
scoreboard = Scoreboard
SCORE_POSITION_L = (-50, 220)
SCORE_POSITION_R = (50, 220)
scoreboard_l = Scoreboard(SCORE_POSITION_L)
scoreboard_r = Scoreboard(SCORE_POSITION_R)
while game_on:
    screen.listen()
    ball.move()
    # Player 1 movement
    screen.onkey(key="w", fun=paddle_l.move_up)
    screen.onkey(key="s", fun=paddle_l.move_down)
    # Player 2 movement
    screen.onkey(key="Up", fun=paddle_r.move_up)
    screen.onkey(key="Down", fun=paddle_r.move_down)
    screen.update()
    # ball hits top/bottom wall
    if ball.ycor() >= 290 or ball.ycor() <= -290:
        ball.wall_bounce()
    # ball hits left paddle
    if ball.distance(paddle_l) < 50 and ball.xcor() < -330:
        ball.paddle_bounce()
    if ball.distance(paddle_r) < 50 and ball.xcor() > 330:
        ball.paddle_bounce()
    time.sleep(ball.move_speed)
    if ball.xcor() > 380:
        scoreboard_l.add_score()
        ball.ball_restart()
    if ball.xcor() < -380:
        scoreboard_r.add_score()
        ball.ball_restart()

screen.exitonclick()
